name: 📦 CI

on:
  push:
    branches: [main]
    tags: [v*]
    paths: ["**", "!**/README.md"]
  workflow_dispatch:


concurrency:
  group: ci-${{ github.event.workflow_run.head_branch || github.ref }}
  cancel-in-progress: true


permissions:
  id-token: write
  contents: read
  packages: read


jobs:
  build-client:
    name: 🔨 Build CurseForge Client Files
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install jq default-jre zip curl coreutils
          curl -sL https://nightly.link/packwiz/packwiz/workflows/go/main/Linux%2064-bit%20x86.zip -o packwiz.zip
          unzip packwiz.zip
          chmod +x packwiz
          mv packwiz .bin/packwiz
          chmod +x .bin/*
          rm packwiz.zip
          echo "${{ github.workspace }}/.bin" >> "$GITHUB_PATH"

      - name: Patch Version
        if: ${{ github.ref_type != 'tag' }}
        run: |
          echo "No tag detected, adding dev to pack version..."
          sed -i -e 's/version = "\(.*\)"/version = "\1-dev"/' pack.toml

      - name: 🔨 Build Modpack Files
        run: |
          mkdir -p build download
          .bin/build client
        env:
          SHADER_UNBOUND_URL: ${{ secrets.SHADER_UNBOUND_URL }}
          SHADER_REIMAGINED_URL: ${{ secrets.SHADER_REIMAGINED_URL }}
          MOD_BASE_URL: ${{ secrets.MOD_BASE_URL }}

      - name: 📡 Upload CurseForge Client
        uses: actions/upload-artifact@v4
        with:
          name: curseforge-client
          if-no-files-found: error
          path: |
            build/*.zip
            !build/*-server.zip

  build-server:
    name: 🔨 Build CurseForge Server Files
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install jq default-jre zip curl coreutils
          curl -sL https://nightly.link/packwiz/packwiz/workflows/go/main/Linux%2064-bit%20x86.zip -o packwiz.zip
          unzip packwiz.zip
          chmod +x packwiz
          mv packwiz .bin/packwiz
          chmod +x .bin/*
          rm packwiz.zip
          echo "${{ github.workspace }}/.bin" >> "$GITHUB_PATH"

      - name: Patch Version
        if: ${{ github.ref_type != 'tag' }}
        run: |
          echo "No tag detected, adding dev to pack version..."
          sed -i -e 's/version = "\(.*\)"/version = "\1-dev"/' pack.toml

      - name: 🔨 Build Modpack Files
        run: |
          mkdir -p build download
          .bin/build server
        env:
          SHADER_UNBOUND_URL: ${{ secrets.SHADER_UNBOUND_URL }}
          SHADER_REIMAGINED_URL: ${{ secrets.SHADER_REIMAGINED_URL }}
          MOD_BASE_URL: ${{ secrets.MOD_BASE_URL }}

      - name: 📡 Upload CurseForge Server
        uses: actions/upload-artifact@v4
        with:
          name: curseforge-server
          if-no-files-found: error
          path: |
            build/*-server.zip
